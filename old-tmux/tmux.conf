RESIZE_STEP=5
set-option -F -g @script-dir "#{d:current_file}/scripts"

# ---------------
# General Options
# ---------------
# Terminal feature support
set-option -as terminal-features "xterm-ghostty:clipboard:ccolour:cstyle:extkeys:hyperlinks:mouse:overline:RGB:strikethrough:title:usstyle"

set-option -s escape-time 15
set-option -s focus-events on

set-option -g mouse on
set-option -g history-limit 30000
set-option -g display-time 1000
set-option -g display-panes-time 2000
set-option -g status-interval 10

# Stay in copy mode after a mouse event
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection

# Window and pane numbering
set-option -g renumber-windows on
set-option -g base-index 1
set-option -wg pane-base-index 1

# ---------------
# Theming Options
# ---------------
# Colors
VIOLET="#494eb6"
DARK_VIOLET="#25285b"
CYAN="#2aa298"
DARK_CYAN="#103a3c"
DIM_MAGENTA="#b02769"
BASE02="#073541"

MUSIC_GREEN="#1db954"

set-option -g display-panes-active-colour $CYAN
set-option -g display-panes-color $VIOLET
set-option -wg clock-mode-color $CYAN

set-option -g menu-selected-style "bg=$VIOLET"

set-option -g message-style "fg=default,bg=$DARK_VIOLET"
set-option -g message-command-style "fg=$VIOLET,bg=default"

set-option -g status-position top
set-option -g status-justify left
set-option -g status-style "fg=terminal,bg=$DARK_CYAN"

set-option -g status-left-length 22
set-option -g status-left-style "fg=black,bg=$VIOLET"
set-option -g status-left "\
	#[fg=$VIOLET,bg=terminal]#[default] \
	#{?client_prefix,#[fg=magenta],} \
	#[default]#{=16:session_name} #[fg=$VIOLET,bg=$DARK_CYAN]"

set-option -g status-right-length 100
set-option -g status-right "\
	#[fg=green]#(#{@script-dir}/media-info.sh #{client_width})\
	#[fg=$DARK_VIOLET]#[fg=$CYAN,bg=$DARK_VIOLET]  #{=|15|…;p16:#{pane_title}} \
	#[fg=$VIOLET]#[fg=black,bg=$VIOLET] %a %-m/%-d %R #[fg=$VIOLET,bg=terminal]"

set-option -wg window-status-separator ""
set-option -wg window-status-style "fg=$CYAN,bg=$DARK_CYAN"
set-option -wg window-status-format "\
	#{?#{!=:#{e|-|:#I,#{active_window_index}},1},#[fg=black]#[default],} \
	#{?#{window_last_flag},#[us=magenta]#[underscore],}#{?#{window_marked_flag},#[fg=$DIM_MAGENTA],}#I#[default] \
	#{?#{window_zoomed_flag},#[us=magenta]#[underscore],}#W#[default] \
	#{?#{window_end_flag},#[fg=black],}"
set-option -wg window-status-current-style "fg=black,bg=$CYAN,bold"
set-option -wg window-status-current-format "\
	#[fg=$CYAN,bg=$DARK_CYAN]#[default] \
	#{?#{window_marked_flag},#[fg=$DIM_MAGENTA],}#I#[default] \
	#{?#{window_zoomed_flag},#[us=magenta]#[underscore],}#W#[default] \
	#[fg=$CYAN,bg=$DARK_CYAN]"

set-option -wg pane-border-lines heavy
set-option -wg pane-active-border-style "fg=$VIOLET"
set-option -wg pane-border-style "fg=$BASE02"

set-option -wg mode-style "fg=black,bg=$CYAN"

set-option -g cursor-style blinking-block

# --------
# Bindings
# --------
# Prefix
set-option -g prefix C-a
unbind-key C-b
bind-key -N "Send prefix" C-a send-prefix

# Source tmux config
bind-key -N "Reload config" R source-file ~/.config/tmux/tmux.conf \; \
	display-message "Sourced config"

# Send fixterms control-m (TODO: eventually figure out how to send all these keys? Use ctrl-shift keybinds etc)
bind-key -n C-m send-keys -l "\e[109;5u"

# Scrolling
bind-key -N "Enter copy mode and scroll up" u copy-mode -e \; send-keys -X halfpage-up
bind-key -T copy-mode-vi u send-keys -X halfpage-up
bind-key -T copy-mode-vi d send-keys -X halfpage-down

bind-key -T copy-mode-vi [ send-keys -X previous-prompt
bind-key -T copy-mode-vi ] send-keys -X next-prompt

# Restart pane
bind-key -N "Kill and restart pane" X respawn-pane -k -c "#{pane_current_path}"

# Clear window
bind-key C-l send-keys "C-l"

# Better new-window
bind-key -N "Create new window" c new-window -c "#{pane_current_path}"

# Faster window switching (keep control held)
bind-key -N "Select the next window" C-n next-window
bind-key -N "Select the previous window" C-p previous-window

# Better last-window
bind-key -N "Switch to the last used window" a last-window

# Better pane navigation and splits (from https://github.com/tmux-plugins/tmux-pain-control)
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -r H resize-pane -L $RESIZE_STEP
bind-key -r J resize-pane -D $RESIZE_STEP
bind-key -r K resize-pane -U $RESIZE_STEP
bind-key -r L resize-pane -R $RESIZE_STEP

bind-key "\\" split-window -h -c "#{pane_current_path}"
bind-key "|" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

bind-key -r "<" swap-window -d -t -1
bind-key -r ">" swap-window -d -t +1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf|rogue)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n C-\\ if-shell "$is_vim" 'send-keys C-\\'  'select-pane -l'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

